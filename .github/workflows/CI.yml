name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        architecture: [x86_64, aarch64, armv7l]
        build_type: [Debug, Release]

    

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

        
      - name: Install dependencies
        run: sudo apt-get install lcov
      
      - name: Check g++ version
        run : |
          gcc --version

      - name: Set up CMake and run tests
        run: |
          export CXX=g++
          rm -rf build
          mkdir -p build
          cd build
          cmake ../ -DBUILD_PLUGIN_NOOP=ON -DENABLE_TESTS=ON -DBUILD_EXAMPLES=ON -DCMAKE_CXX_STANDARD=11 -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make
          make test ARGS="-V"
          cd ../
        shell: bash
        env:
          ARCHITECTURE: ${{ matrix.architecture }}






# name: CI

# on:
#   pull_request:
#     branches:
#       - main
#   push:
#     branches:
#       - main

#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         archconfig: [ x86_64, aarch64, armv7l ]
#         build_type: [Debug, Release]
#       fail-fast: false

#     steps:
#     - name: Cleanup pervious jobs
#       run: |
#         echo "Cleaning up previous runs"
#         sudo rm -rf ${{ github.workspace }}/*
#         sudo rm -rf ${{ github.workspace }}/.??*

#     - name: Checkout code
#       uses: actions/checkout@v2
#       with:
#         submodules: recursive

#     - name: Build project
#       id: build_vaccelrt
#       run: |
#           mkdir -p build_${{matrix.build_type}}
#           cd build_${{matrix.build_type}}
#           cmake ${{github.workspace}} \
#             -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/artifacts/${{matrix.archconfig}}/${{matrix.build_type}}/opt \
#             -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
#             -DENABLE_TESTS=ON \
#             -DBUILD_EXAMPLES=ON \
#             -DBUILD_PLUGIN_NOOP=ON \
#             -DCMAKE_CXX_STANDARD=11 && \
#           cmake --build . --config ${{matrix.build_type}} && \
#           make install -C src && \
#           make install -C third-party && \
#           make install -C plugins
#           make test
      

#     - name: Build vAccel plugins
#       id: build_plugins
#       run: |
#         cd build_${{matrix.build_type}}
#         cmake ${{github.workspace}} \
#           -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/artifacts/${{matrix.archconfig}}/${{matrix.build_type}}/opt \
#           -DBUILD_PLUGIN_NOOP=ON && \
#         make -C plugins && make install -C plugins

#     - name: Clean-up
#       run: sudo rm -rf artifacts build_${{ matrix.build_type }}
